@model SMS.DtoLayer.Student.StudentDetailDTO

@{
    ViewBag.Title = "Student Details";
    Layout = "_UILayout";
}

<div class="container my-5">
    <div class="card shadow-sm">
        <!-- Student Header Section -->
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="mb-0">Student Profile</h3>
                <div>
                    <span class="badge @(Model.Status ? "bg-success" : "bg-secondary") fs-6">
                        @(Model.Status ? "Active" : "Inactive")
                    </span>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <div class="row">
                <!-- Student Profile Column -->
                <div class="col-md-4 text-center border-end">
                    <div class="position-relative mb-4">
                        <img src="@Model.ImageUrl" class="rounded-circle shadow" width="180" height="180"
                             alt="Student Image"
                             onerror="this.src='https://ui-avatars.com/api/?name=@Model.Name&background=random&size=200'"/>
                        @if (Model.Status)
                        {
                            <span
                                class="position-absolute bottom-0 end-0 bg-success p-2 rounded-circle border border-3 border-white"></span>
                        }
                    </div>

                    <h3 class="mt-3 mb-1">@Model.Name</h3>
                    <p class="text-muted mb-3">
                        <i class="fas fa-birthday-cake me-2"></i>@Model.DateOfBirth?.ToString("dd MMM yyyy")
                    </p>

                    <div class="d-grid gap-2 mb-4">
                        <button class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-envelope me-2"></i>Send Message
                        </button>
                        <button class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-file-pdf me-2"></i>Generate Report
                        </button>
                    </div>

                    <div class="card bg-light mb-3">
                        <div class="card-body p-3">
                            <h6 class="card-title text-muted mb-3">Quick Stats</h6>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Modules</span>
                                <span class="fw-bold">@Model.StudentModules?.Count()</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Completed HW</span>
                                <span class="fw-bold">@Model.HomeWorks?.Count(h => h.Status)</span>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span>Pending HW</span>
                                <span class="fw-bold">@Model.HomeWorks?.Count(h => !h.Status)</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Student Content Column -->
                <div class="col-md-8 ps-4">
                    <ul class="nav nav-tabs" id="studentTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="modules-tab" data-bs-toggle="tab"
                                    data-bs-target="#modules" type="button" role="tab">
                                <i class="fas fa-book me-2"></i>Modules
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="homeworks-tab" data-bs-toggle="tab"
                                    data-bs-target="#homeworks" type="button" role="tab">
                                <i class="fas fa-tasks me-2"></i>Homeworks
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="progress-tab" data-bs-toggle="tab"
                                    data-bs-target="#progress" type="button" role="tab">
                                <i class="fas fa-chart-line me-2"></i>Progress
                            </button>
                        </li>
                    </ul>

                    <div class="tab-content mt-4" id="studentTabsContent">
                        <!-- Modules Tab -->
                        <div class="tab-pane fade show active" id="modules" role="tabpanel">
                            @if (Model.StudentModules?.Any() == true)
                            {
                                <div class="accordion" id="modulesAccordion">
                                    @foreach (var module in Model.StudentModules)
                                    {
                                        <div class="accordion-item mb-2 border-0 shadow-sm">
                                            <h2 class="accordion-header" id="heading-@module.ModuleId">
                                                <button class="accordion-button @(module.Status ? "" : "collapsed")"
                                                        type="button"
                                                        data-bs-toggle="collapse"
                                                        data-bs-target="#collapse-@module.ModuleId"
                                                        aria-expanded="@module.Status.ToString().ToLower()"
                                                        aria-controls="collapse-@module.ModuleId">
                                                    <div class="d-flex justify-content-between w-100 pe-3">
                                                        <span>@module.ModuleName</span>
                                                        <span
                                                            class="badge @(module.Status ? "bg-primary" : "bg-warning")">
                                                            @(module.Status ? "Active" : "Inactive")
                                                        </span>
                                                    </div>
                                                </button>
                                            </h2>
                                            <div id="collapse-@module.ModuleId"
                                                 class="accordion-collapse collapse @(module.Status ? "show" : "")"
                                                 aria-labelledby="heading-@module.ModuleId"
                                                 data-bs-parent="#modulesAccordion">
                                                <div class="accordion-body">

                                                    <h3>buraya topicler gelecek</h3>
                                                    @if (module.TopicDtos?.Any() == true)
                                                    {
                                                        <ul class="list-group list-group-flush">
                                                            @foreach (var topic in module.TopicDtos)
                                                            {
                                                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                                                    <span>@topic.TopicName</span>
                                                                    <span
                                                                        class="badge @(topic.Status ? "bg-success" : "bg-secondary")">
                    @(topic.Status ? "Completed" : "Pending")
                </span>
                                                                </li>
                                                            }
                                                        </ul>
                                                    }
                                                    else
                                                    {
                                                        <div class="text-muted">No topics available for this module.
                                                        </div>
                                                    }

                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>No modules assigned to this student.
                                </div>
                            }
                        </div>

                        <!-- Homeworks Tab -->
                        <div class="tab-pane fade" id="homeworks" role="tabpanel">
                            @if (Model.HomeWorks?.Any() == true)
                            {
                                <div class="table-responsive">
                                    <table class="table table-hover align-middle">
                                        <thead class="table-light">
                                        <tr>
                                            <th>Title</th>
                                            <th>Content</th>
                                            <th>Due Date</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach (var hw in Model.HomeWorks.OrderByDescending(h => h.CreatedDate))
                                        {
                                            <tr>
                                                <td>@hw.Title</td>
                                                <td class="text-truncate" style="max-width: 200px;">@hw.Content</td>
                                                <td>@hw.CreatedDate?.ToString("dd MMM yyyy")</td>
                                                <td>
                                                        <span class="badge @(hw.Status ? "bg-success" : "bg-danger")">
                                                            @(hw.Status ? "Completed" : "Pending")
                                                        </span>
                                                </td>
                                                <td>
                                                    <button class="btn btn-sm btn-outline-primary" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-secondary ms-1"
                                                            title="Download">
                                                        <i class="fas fa-download"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                </div>

                                <div class="d-flex justify-content-between mt-3">
                                    <div class="text-muted">
                                        Showing @Model.HomeWorks.Count() homeworks
                                    </div>
                                    <button class="btn btn-sm btn-primary">
                                        <i class="fas fa-plus me-1"></i> Add Homework
                                    </button>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>No homework assigned to this student.
                                </div>
                                <button class="btn btn-primary">
                                    <i class="fas fa-plus me-1"></i> Assign Homework
                                </button>
                            }
                        </div>

                        <!-- Progress Tab -->
                        <div class="tab-pane fade" id="progress" role="tabpanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card mb-4">
                                        <div class="card-header bg-light">
                                            <h6 class="mb-0">Module Completion</h6>
                                        </div>
                                        <div class="card-body">
                                            <canvas id="moduleProgressChart" height="200"></canvas>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header bg-light">
                                            <h6 class="mb-0">Homework Status</h6>
                                        </div>
                                        <div class="card-body">
                                            <canvas id="homeworkStatusChart" height="200"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mt-3">
                                <div class="card-header bg-light">
                                    <h6 class="mb-0">Recent Activity</h6>
                                </div>
                                <div class="card-body">
                                    <div class="list-group list-group-flush">
                                        <div class="list-group-item d-flex">
                                            <div class="flex-shrink-0">
                                                <i class="fas fa-check-circle text-success me-3"></i>
                                            </div>
                                            <div>
                                                <small class="text-muted">Today, 10:45 AM</small>
                                                <p class="mb-0">Completed homework for Mathematics</p>
                                            </div>
                                        </div>
                                        <div class="list-group-item d-flex">
                                            <div class="flex-shrink-0">
                                                <i class="fas fa-book text-primary me-3"></i>
                                            </div>
                                            <div>
                                                <small class="text-muted">Yesterday, 3:30 PM</small>
                                                <p class="mb-0">Started new module in History</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Module Progress Chart
            const moduleCtx = document.getElementById('moduleProgressChart').getContext('2d');
            new Chart(moduleCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Completed', 'In Progress', 'Not Started'],
                    datasets: [{
                        data: [3, 2, 1], // Replace with actual data
                        backgroundColor: [
                            '#4cc9f0',
                            '#4361ee',
                            '#f8f9fa'
                        ],
                        borderWidth: 0
                    }]
                },
                options: {
                    cutout: '70%',
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            // Homework Status Chart
            const homeworkCtx = document.getElementById('homeworkStatusChart').getContext('2d');
            new Chart(homeworkCtx, {
                type: 'bar',
                data: {
                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],
                    datasets: [{
                        label: 'Completed',
                        data: [3, 2, 4, 5, 1],
                        backgroundColor: '#4cc9f0'
                    }, {
                        label: 'Pending',
                        data: [1, 3, 2, 1, 2],
                        backgroundColor: '#f72585'
                    }]
                },
                options: {
                    scales: {
                        x: {
                            stacked: true,
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            stacked: true,
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        });
    </script>
}